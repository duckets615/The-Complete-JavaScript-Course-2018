// SECTION 3: HOW JAVASCRIPT WORKS BEHIND THE SCENES.

///////////////////////////////////////
// Lecture: Hoisting

//calcAge(1950);
//
//function calcAge(year) {
//    console.log(2018 - year)
//}
//
//calcAge(1985);
//
//var retirement = function(year) {
//    console.log(65 - (2018 - year));
//}
//
//retirement(1990)
//
//// retirement will not be hoisted b/c hoisting is only for func declarations


//console.log(age);
//var age = 20;
//
//function foo() {
//    var age = 65;
//    console.log(age);
//}
//
//foo();
//console.log(age);
//






///////////////////////////////////////
// Lecture: Scoping


// First scoping example

/*
var a = 'Hello!';
first();

function first() {
    var b = 'Hi!';
    second();

    function second() {
        var c = 'Hey!';
        console.log(a + b + c);
    }
}
*/



// Example to show the differece between execution stack and scope chain

/*
var a = 'Hello!';
first();

function first() {
    var b = 'Hi!';
    second();

    function second() {
        var c = 'Hey!';
        third()
    }
}

function third() {
    var d = 'John';
    console.log(a + b + c + d);
}
*/



///////////////////////////////////////
// Lecture: The this keyword

//var john = {
//    name:'John',
//    yearOfBirth: 1990,
//    calculateAge: function() {
//        console.log(this);
//        console.log(2016 - this.yearOfBirth);
//        
//        function innerFunction(){
//            console.log(this)
//        }
    
//    innerFunction();
//  }
//}
//    
//
//
//john.calculateAge()
//
//var mike = {
//    name: 'Mike',
//    yearOfBirth: 1985
//}
//
//mike.calculateAge = john.calculateAge;
//
//mike.calculateAge()




